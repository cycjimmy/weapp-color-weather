<style lang="scss" src="app.scss"></style>

<script>
  import wepy from 'wepy';
  import 'wepy-async-function';

  import {
    getWeather
  } from './shared/weather.funcs';

  import {
    getStorage,
    setStorage
  } from './shared/storage.funcs';

  export default class extends wepy.app {
    config = {
      pages: [
        'pages/index/index',
        'pages/suggest/suggest',
        'pages/about/about',
        'pages/suggest/suggestInner/suggestInner'
      ],
      window: {
        backgroundTextStyle: 'light',
        navigationBarBackgroundColor: '#f2f2f2',
        navigationBarTitleText: 'Color Weather',
        navigationBarTextStyle: 'black'
      },
      tabBar: {
        color: '#aab8b8',
        selectedColor: '#09ce6e',
        backgroundColor: '#f2f2f2',
        borderStyle: 'white',
        list: [{
          selectedIconPath: 'static/images/icon_weather_selected.png',
          iconPath: 'static/images/icon_weather.png',
          pagePath: 'pages/index/index',
          text: '天气'
        }, {
          selectedIconPath: 'static/images/icon_suggest_selected.png',
          iconPath: 'static/images/icon_suggest.png',
          pagePath: 'pages/suggest/suggest',
          text: '建议'
        }, {
          selectedIconPath: 'static/images/icon_about_selected.png',
          iconPath: 'static/images/icon_about.png',
          pagePath: 'pages/about/about',
          text: '关于'
        }]
      }
    };

    globalData = {
      current: {},
      forecast: [],
      suggestion: {},
      updated: 0
    };

    constructor() {
      super();
      this.use('requestfix');
    };

    onLaunch() {
    };

    setGlobalWeather() {
      const TIMEOUT = 60 * 60 * 1e3;  // 1hour
      let _now = new Date().getTime();

      let _promiseFinalTask = () => {
        console.log('promiseFinalTask');
        wx.hideLoading();
      };

      let _getWeatherFromData = weatherData => new Promise(resolve => {
        this.globalData.current = weatherData.current;
        this.globalData.forecast = weatherData.forecast;
        this.globalData.suggestion = weatherData.suggestion;
        this.globalData.updated = weatherData.updated;
        setTimeout(resolve, 100);
      })
        .then(() => _promiseFinalTask())
        .catch((err) => {
          _promiseFinalTask();
          return Promise.reject(err);
        });

      let _getWeatherFromSever = () => Promise.resolve()
        .then(() => new Promise(resolve => {
          wx.showLoading({title: '获取中'});
          setTimeout(resolve, 100);
        }))
        .then(() => getWeather())
        .then(weatherData => {
          weatherData.updated = _now;
          return setStorage(weatherData);
        })
        .then(weatherData => _getWeatherFromData(weatherData));

      if (
        this.globalData.updated &&
        this.globalData.updated + TIMEOUT > _now) {
        return Promise.resolve();
      }

      return Promise.resolve()
        .then(() => getStorage())
        .then((weatherData) => {
          console.log(weatherData);
          if (weatherData.updated + TIMEOUT < _now) {
            return _getWeatherFromSever();
          } else {
            return _getWeatherFromData(weatherData);
          }
        }, (err) => {
          console.log(err);
          return _getWeatherFromSever();
        });
    };
  };
</script>
