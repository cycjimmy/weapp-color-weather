<style lang="scss" src="app.scss"></style>

<script>
  import wepy from 'wepy';
  import 'wepy-async-function';

  import {
    getWeather
  } from './shared/commonFuncs';

  export default class extends wepy.app {
    config = {
      pages: [
        'pages/index/index',
        'pages/suggest/suggest',
        'pages/about/about'
      ],
      window: {
        backgroundTextStyle: 'light',
        navigationBarBackgroundColor: '#f2f2f2',
        navigationBarTitleText: 'Color Weather',
        navigationBarTextStyle: 'black'
      },
      tabBar: {
        color: '#aab8b8',
        selectedColor: '#09ce6e',
        backgroundColor: '#f2f2f2',
        borderStyle: 'white',
        list: [{
          selectedIconPath: 'static/images/icon_weather_selected.png',
          iconPath: 'static/images/icon_weather.png',
          pagePath: 'pages/index/index',
          text: '天气'
        }, {
          selectedIconPath: 'static/images/icon_suggest_selected.png',
          iconPath: 'static/images/icon_suggest.png',
          pagePath: 'pages/suggest/suggest',
          text: '建议'
        }, {
          selectedIconPath: 'static/images/icon_about_selected.png',
          iconPath: 'static/images/icon_about.png',
          pagePath: 'pages/about/about',
          text: '关于'
        }]
      }
    }

    globalData = {
      current: {},
      forecast: [],
      suggestion: {},
      suggestionDate: '',
      updated: 0
    }

    constructor() {
      super();
      this.use('requestfix');
    }

    onLaunch() {
    };

    setGlobalWeather() {
      const TIMEOUT = 60 * 60 * 1e3;  // 1hour
      let _now = new Date().getTime();

      if (
        this.globalData.updated &&
        this.globalData.updated + TIMEOUT > _now) {
        return Promise.resolve();
      }

      return getWeather()
        .then(weatherData => new Promise(resolve => {
          console.log(weatherData);
          this.globalData.current = weatherData.current;
          this.globalData.forecast = weatherData.forecast;
          this.globalData.suggestionDate = weatherData.suggestionDate;
          this.globalData.suggestion = weatherData.suggestion;
          this.globalData.updated = new Date().getTime();

          setTimeout(resolve, 10);
        }));
    };
  };
</script>
